#!/usr/bin/env python
PACKAGE = "svh_controller"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

# Postion controller Values
gen.add("position_controller_wmn",double_t,0,"Position controller Reference signal minimum value", 0.1, 0.0, 200.0)
gen.add("position_controller_wmx",double_t,0,"Position controller Reference signal maximum value", 0.1, 0.0, 200.0)
gen.add("position_controller_dwmx",double_t,0,"Position controller Reference signal delta maximum threshold", 0.1, 0.0, 200.0)
gen.add("position_controller_ky",double_t,0,"Position controller Measurement scaling", 0.1, 0.0, 200.0)
gen.add("position_controller_dt",double_t,0,"Position controller Time base", 0.1, 0.0, 200.0)
gen.add("position_controller_imn",double_t,0,"Position controller Integral windup minimum value", 0.1, 0.0, 200.0)
gen.add("position_controller_imx",double_t,0,"Position controller Integral windup maximum value", 0.1, 0.0, 200.0)
gen.add("position_controller_kp",double_t,0,"Position controller Proportional gain", 0.1, 0.0, 200.0)
gen.add("position_controller_ki",double_t,0,"Position controller Integral gain", 0.1, 0.0, 200.0)
gen.add("position_controller_kd",double_t,0,"Position controller Differential gain", 0.1, 0.0, 200.0)
# Current controller values
gen.add("current_controller_wmn",double_t,0,"Current controller Reference signal minimum value", 0.1, 0.0, 200.0)
gen.add("current_controller_wmx",double_t,0,"Current controller Reference signal maximum value", 0.1, 0.0, 200.0)
gen.add("current_controller_ky",double_t,0,"Current controller measurement scaling", 0.1, 0.0, 200.0)
gen.add("current_controller_dt",double_t,0,"Current controller time base", 0.1, 0.0, 200.0)
gen.add("current_controller_imn",double_t,0,"Current controller Integral windup minimum value", 0.1, 0.0, 200.0)
gen.add("current_controller_imx",double_t,0,"Current controller Integral windup maximum value", 0.1, 0.0, 200.0)
gen.add("current_controller_kp",double_t,0,"Current controller proportional gain", 0.1, 0.0, 200.0)
gen.add("current_controller_ki",double_t,0,"Current controller Integral gain", 0.1, 0.0, 200.0)
gen.add("current_controller_umn",double_t,0,"Current controller Output limiter min", 0.1, 0.0, 200.0)
gen.add("current_controller_umx",double_t,0,"Current controller Output limiter max", 0.1, 0.0, 200.0)


exit(gen.generate(PACKAGE, "svh_controller", "svhFinger"))

